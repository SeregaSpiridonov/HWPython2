"""
Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""


def my_div(arg_1, arg_2):
    return arg_1 / arg_2


def task_1():
    number_1 = int(input('Введите первое число: '))
    number_2 = int(input('Введите второе число: '))
    if number_2 == 0 or number_1 == 0:
        print('Ошибка, деление на ноль!')
    else:
        print(my_div(number_1, number_2))


task_1()

"""
Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры 
как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.
"""


def task_2(name, surname, year_birth, city_residence, email, phone):
    print(name, surname, year_birth, city_residence, email, phone)


task_2(email='ivan_1992@mail.ru', phone=89992314567, name='Иван', surname='Иванов',
       year_birth=1992, city_residence='Мурманск')

"""
Реализовать функцию my_func(), которая принимает три позиционных аргумента и 
возвращает сумму наибольших двух аргументов.
"""


def task_3(arg_1, arg_2, arg_3):
    min_arg = min(arg_1, arg_2, arg_3)
    return arg_1 + arg_2 + arg_3 - min_arg


print(task_3(8, 5, 10))

"""
Программа принимает действительное положительное число x и целое отрицательное число y. 
Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


def task_4_1(num_x, num_y):
    print(num_x ** num_y)


task_4_1(2.5, -2)


def task_4_2(num_x, num_y):
    num_deg = 1
    for i in range(abs(num_y)):
        num_deg *= num_x
    num_deg = 1 / num_deg
    print(num_deg)


task_4_2(2.5, -2)

"""
Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться 
сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь 
введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ 
введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого 
завершить программу.
"""


def task_5():
    flag = True
    sum_num = 0
    while flag is True:
        my_str = input('Введите числа через пробел(для выхода #): ')
        my_list = my_str.split()
        for el in my_list:
            if el.isdigit() is True:
                sum_num += int(el)
        print(f'Общая сумма: {sum_num}.')
        if my_list.count('#') != 0:
            flag = False


task_5()

"""
Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
"""


def task_6(*my_str):
    my_list = []
    for el in my_str:
        my_list.append(el.capitalize())
    return my_list


print(' '.join(task_6('text', 'zoom', 'geak')))

"""
Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, 
но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
"""


def task_7(my_str):
    my_list = my_str.split()
    my_str = ' '.join(task_6(*my_list))
    print(my_str)


task_7('text geek brains')
